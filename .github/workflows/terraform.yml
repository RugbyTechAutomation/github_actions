name: Terraform CI/CD with OIDC

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  terraform-plan:
    runs-on: ubuntu-latest

    env:
      TF_WORKING_DIR: ./terraform

    steps:
      - name: Azure CLI login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Cache Terraform state and dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.TF_WORKING_DIR }}/.terraform
            ${{ env.TF_WORKING_DIR }}/.terraform.lock.hcl
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf*') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Terraform Format Check
        id: fmt
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform fmt -check
        continue-on-error: true

      - name: Initialize Terraform
        id: init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform init -upgrade \
            -backend-config="storage_account_name=stgtfstatedjy01" \
            -backend-config="container_name=tfstate" \
            -backend-config="key=terraform.tfstate" \
            -backend-config="use_oidc=true" \
            -backend-config="tenant_id=${{ secrets.AZURE_TENANT_ID }}"

# -backend-config="use_azuread_auth=true"
            
# ${{ secrets.AZURE_ACCESS_KEY }}"
# ${{ secrets.AZURE_BACKEND_KEY }}" \

#\
# -backend-config="key=${{ secrets.AZURE_BACKEND_KEY }}" \
# -backend-config="access_key=${{ secrets.AZURE_ACCESS_KEY }}"

      - name: Terraform Validate
        id: validate
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -no-color -out=tfplan

      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ${{ env.TF_WORKING_DIR }}/tfplan
  
  terraform-apply:
    runs-on: ubuntu-latest
    needs: terraform-plan

    env:
      TF_WORKING_DIR: ./terraform

    steps:
      - name: Azure CLI login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Cache Terraform state and dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.TF_WORKING_DIR }}/.terraform
            ${{ env.TF_WORKING_DIR }}/.terraform.lock.hcl
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf*') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Download Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Apply
        id: apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -no-color --auto-approve tfplan
