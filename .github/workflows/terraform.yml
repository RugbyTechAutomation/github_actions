name: Terraform CI/CD with OIDC

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    # env:
    #   # TF_WORKING_DIR: ./terraform
    #   CACHE_KEY: ${{ github.runner.os }}-terraform-${{ hashFiles('**/*.tf*') }}

    steps:
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf*') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Terraform fmt
        id: fmt
        working-directory: ${{ github.workspace }}/terraform
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        working-directory: ${{ github.workspace }}/terraform
        run: terraform init -backend=false

      # - name: Terraform Workspace ##
      #   run: terraform workspace select -or-create sandbox ##

      - name: Terraform Validate
        id: validate
        working-directory: ${{ github.workspace }}/terraform
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        working-directory: ${{ github.workspace }}/terraform
        run: terraform plan -no-color -out-tfplan

      # - name: Terraform Apply
      #   id: apply
      #   working-directory: ${{ github.workspace }}/terraform
      #   run: terraform apply -no-color --auto-approve